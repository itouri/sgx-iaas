/*

Copyright 2018 Intel Corporation

This software and the related documents are Intel copyrighted materials,
and your use of them is governed by the express license under which they
were provided to you (License). Unless the License provides otherwise,
you may not use, modify, copy, publish, distribute, disclose or transmit
this software or the related documents without Intel's prior written
permission.

This software and the related documents are provided as is, with no
express or implied warranties, other than those that are expressly stated
in the License.

*/

enclave {
	include "sgx_trts.h"
	include "sgx_utils.h"
	include "sgx_tkey_exchange.h"
	include "uuid/uuid.h"

	from "sgx_tkey_exchange.edl" import *;

	trusted {
		public sgx_status_t get_report([out] sgx_report_t *report,
			[in] sgx_target_info_t *target_info);

		public size_t get_pse_manifest_size();

		public sgx_status_t get_pse_manifest([out, count=sz] char *buf, size_t sz);

		public sgx_status_t enclave_ra_init(sgx_ec256_public_t key, int b_pse,
			[out] sgx_ra_context_t *ctx, [out] sgx_status_t *pse_status);

		public sgx_status_t enclave_ra_init_def(int b_pse,
			[out] sgx_ra_context_t *ctx, [out] sgx_status_t *pse_status);

		public sgx_status_t enclave_ra_get_key_hash(
			[out] sgx_status_t *get_keys_status, sgx_ra_context_t ctx,
			sgx_ra_key_type_t type, [out] sgx_sha256_hash_t *hash);

		public sgx_status_t enclave_ra_close(sgx_ra_context_t ctx);
		public sgx_status_t enclave_launch_vm(
			[in]unsigned char *cry_req_data,
			[in]uuid_t *image_id,
			[in]sgx_ra_context_t *ctx
		); //added

		//TODO add e_fileio funcs

	};

	untrusted {
		int send_to_ras_ocall([in, out]char *src, size_t sz);
		int recv_from_ras_ocall([in, out]char **dest, [in, out] size_t *sz);
		int read_file_ocall([in, out]unsigned char *dest, [in, out]char *file, [in, out]off_t *len);
		int run_graphene_vm_ocall([in, out]sgx_enclave_id_t *graphene_eid, [in, out]uuid_t *image_id);
	};
};


